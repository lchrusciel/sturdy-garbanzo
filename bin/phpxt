#!/usr/bin/env php
<?php

toggleXdebug();

function toggleXdebug()
{
    try {
        $xdebugConfigurationFile = findXdebugConfigurationFile();
    } catch (\RuntimeException $exception) {
        echo 'Cannot find configuration file having "xdebug" in its name!' . PHP_EOL;
        return;
    }

    if (isXdebugEnabled()) {
        echo 'Disabling Xdebug...' . PHP_EOL;
        disableXdebug($xdebugConfigurationFile);
        return;
    }

    echo 'Enabling Xdebug...' . PHP_EOL;
    enableXdebug($xdebugConfigurationFile);
}

/**
 * @return string
 *
 * @throws \RuntimeException If XDebug configuration file is not found
 */
function findXdebugConfigurationFile()
{
    $configurationFiles = explode(',', php_ini_scanned_files());
    foreach ($configurationFiles as $configurationFile) {
        if (false === strpos($configurationFile, 'xdebug')) {
            continue;
        }

        return trim($configurationFile);
    }

    throw new \RuntimeException(sprintf(
        'Could not find XDebug configuration file among these ones: %s',
        implode(', ', $configurationFiles)
    ));
}

/**
 * @return bool
 */
function isXdebugEnabled()
{
    return in_array('xdebug', get_loaded_extensions(), true);
}

/**
 * @param string $xdebugConfigurationFile
 */
function enableXdebug($xdebugConfigurationFile)
{
    manipulateXdebugConfigurationFile($xdebugConfigurationFile, function ($contents) {
        return preg_replace('/^([;\s]*)zend_extension/m', 'zend_extension', $contents);
    });
}

/**
 * @param string $xdebugConfigurationFile
 */
function disableXdebug($xdebugConfigurationFile)
{
    manipulateXdebugConfigurationFile($xdebugConfigurationFile, function ($contents) {
        return preg_replace('/^\s*zend_extension/m', '; zend_extension', $contents);
    });
}

/**
 * @param string $xdebugConfigurationFile
 * @param callable $callback
 */
function manipulateXdebugConfigurationFile($xdebugConfigurationFile, callable $callback)
{
    file_put_contents($xdebugConfigurationFile, $callback(file_get_contents($xdebugConfigurationFile)));
}
